import type { GetStaticProps, NextPage } from "next";
import Head from "next/head";
import { PostsView } from "~/components/PostView";
import { PageLayout } from "~/components/layout";
import { generateSSGHelper } from "~/server/helpers/ssgHelper";
import { api } from "~/utils/api";

const SinglePostPage: NextPage<{ id: string }> = ({ id }) => {
  const { data } = api.posts.getById.useQuery({
    id,
  });

  if (!data || !data.post.content) return <div>Post not found</div>;

  console.log(data);

  return (
    <>
      <Head>
        <title>{`Chirp | ${data.post.content}`}</title>
        <meta name="description" content="Generated by create-t3-app" />
      </Head>
      <PageLayout>
        <PostsView {...data} />
      </PageLayout>
    </>
  );
};

export const getStaticProps: GetStaticProps = async (ctx) => {
  // SSG is used to prefetch data for the page before it is rendered
  // This is useful for pages that are not frequently updated
  // and can be pre-rendered at build time
  const ssg = generateSSGHelper();
  const id = ctx.params?.id;

  if (typeof id !== "string") throw new Error("No Id provided");

  await ssg.posts.getById.prefetch({ id });

  return {
    props: {
      trpcState: ssg.dehydrate(),
      id,
    },
  };
};

export const getStaticPaths = () => {
  return {
    paths: [],
    fallback: "blocking",
  };
};

export default SinglePostPage;
